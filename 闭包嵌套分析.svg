<?xml version="1.0" encoding="UTF-8"?>
<svg width="1000" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #333; }
      .function-name { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: #1976d2; }
      .closure-name { font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; fill: #d32f2f; }
      .code-text { font-family: 'Courier New', monospace; font-size: 11px; fill: #333; }
      .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .box { fill: #f5f5f5; stroke: #666; stroke-width: 1; }
      .closure-box { fill: #fff3e0; stroke: #ff9800; stroke-width: 2; }
      .nested-closure { fill: #e8f5e8; stroke: #4caf50; stroke-width: 2; }
      .level-1 { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; }
      .level-2 { fill: #fff3e0; stroke: #ff9800; stroke-width: 2; }
      .level-3 { fill: #e8f5e8; stroke: #4caf50; stroke-width: 2; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>
  
  <!-- 标题 -->
  <text x="500" y="30" text-anchor="middle" class="title">RichEditorView 闭包嵌套分析</text>
  
  <!-- 第一层：getClientHeight 函数 -->
  <rect x="50" y="60" width="900" height="80" class="level-1" />
  <text x="70" y="80" class="function-name">getClientHeight(handler: @escaping (Int) -> Void)</text>
  <text x="70" y="100" class="code-text">private func getClientHeight(handler: @escaping (Int) -> Void) {</text>
  <text x="70" y="120" class="code-text">    // 执行 JavaScript 获取高度</text>
  <text x="70" y="140" class="code-text">    runJS("document.getElementById('editor').clientHeight") { r in</text>
  
  <!-- 箭头指向第二层 -->
  <line x1="500" y1="150" x2="500" y2="170" class="arrow" />
  <text x="510" y="165" class="code-text">调用 runJS</text>
  
  <!-- 第二层：runJS 函数 -->
  <rect x="50" y="180" width="900" height="120" class="level-2" />
  <text x="70" y="200" class="function-name">runJS(_ js: String, handler: ((String) -> Void)? = nil)</text>
  <text x="70" y="220" class="code-text">public func runJS(_ js: String, handler: ((String) -> Void)? = nil) {</text>
  <text x="70" y="240" class="code-text">    // 在 webView 上执行 JavaScript</text>
  <text x="70" y="260" class="code-text">    webView.evaluateJavaScript(js) { (result, error) in</text>
  <text x="70" y="280" class="code-text">        // 处理结果...</text>
  <text x="70" y="300" class="code-text">        handler?(resultString)</text>
  
  <!-- 箭头指向第三层 -->
  <line x1="500" y1="310" x2="500" y2="330" class="arrow" />
  <text x="510" y="325" class="code-text">调用 evaluateJavaScript</text>
  
  <!-- 第三层：evaluateJavaScript 闭包 -->
  <rect x="50" y="340" width="900" height="100" class="level-3" />
  <text x="70" y="360" class="closure-name">evaluateJavaScript 闭包</text>
  <text x="70" y="380" class="code-text">webView.evaluateJavaScript(js) { (result, error) in</text>
  <text x="70" y="400" class="code-text">    // 处理 JavaScript 执行结果</text>
  <text x="70" y="420" class="code-text">    if let error = error { ... }</text>
  <text x="70" y="440" class="code-text">    handler?(resultString)  // 调用传入的闭包</text>
  
  <!-- 闭包嵌套关系图 -->
  <g id="closure-relationship">
    <text x="50" y="480" class="title">闭包嵌套关系：</text>
    
    <!-- 第一层闭包 -->
    <rect x="50" y="500" width="200" height="40" class="closure-box" />
    <text x="70" y="520" class="closure-name">getClientHeight 的 handler</text>
    <text x="70" y="535" class="code-text">(Int) -> Void</text>
    
    <!-- 箭头 -->
    <line x1="250" y1="520" x2="270" y2="520" class="arrow" />
    <text x="280" y="525" class="code-text">作为参数传入</text>
    
    <!-- 第二层闭包 -->
    <rect x="350" y="500" width="200" height="40" class="closure-box" />
    <text x="370" y="520" class="closure-name">runJS 的 handler</text>
    <text x="370" y="535" class="code-text">(String) -> Void</text>
    
    <!-- 箭头 -->
    <line x1="550" y1="520" x2="570" y2="520" class="arrow" />
    <text x="580" y="525" class="code-text">作为参数传入</text>
    
    <!-- 第三层闭包 -->
    <rect x="650" y="500" width="200" height="40" class="nested-closure" />
    <text x="670" y="520" class="closure-name">evaluateJavaScript 闭包</text>
    <text x="670" y="535" class="code-text">(Any?, Error?) -> Void</text>
  </g>
  
  <!-- 执行流程说明 -->
  <g id="execution-flow">
    <text x="50" y="570" class="title">执行流程：</text>
    <text x="50" y="590" class="code-text">1. getClientHeight 调用 runJS，传入一个闭包作为 handler</text>
    <text x="50" y="605" class="code-text">2. runJS 调用 webView.evaluateJavaScript，传入另一个闭包</text>
    <text x="50" y="620" class="code-text">3. evaluateJavaScript 执行完成后，调用其闭包</text>
    <text x="50" y="635" class="code-text">4. 在 evaluateJavaScript 的闭包中，调用 runJS 的 handler</text>
    <text x="50" y="650" class="code-text">5. 在 runJS 的 handler 中，调用 getClientHeight 的 handler</text>
  </g>
</svg>



